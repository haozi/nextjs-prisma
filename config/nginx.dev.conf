server {
    listen 80;
    listen 443 ssl;
    server_name localhost;
    ssl_certificate /etc/keys/localhost.cert.pem;
    ssl_certificate_key /etc/keys/localhost.key.pem;

    index index.html;

    server_tokens off;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    # 代理 WebSocket 需要的头部
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    # 处理 /i 及其子路径
    # location = /i {
    #     proxy_pass http://host.docker.internal:65173/i;
    # }
    # location ^~ /i/ {
    #     proxy_pass http://host.docker.internal:65173/i/;
    # }

    # 处理 /api 及其子路径
    location ^~ /api/auth {
        proxy_pass http://host.docker.internal:63000/api/auth;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ^~ /api/ {
        proxy_pass http://fastapi:8000/api/;
    }

    # location ^~ /phpmyadmin/ {
    #     proxy_pass http://phpmyadmin:80/;
    # }

    # 代理 nextjs 应用，处理需要 SEO 的页面
    location / {
        proxy_pass http://host.docker.internal:63000/;
    }

    error_page 404 /index.html;
}

# stream {
#     upstream mysql_backend {
#         server mysql:3306;
#     }

#     server {
#         listen 68964;
#         proxy_pass mysql_backend;
#     }
# }
